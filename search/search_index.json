{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Computer%20Network/CS144/","title":"CS144: Computer Network","text":""},{"location":"Computer%20Network/CS144/#_1","title":"\u8bfe\u7a0b\u7b80\u4ecb","text":"<ul> <li>\u6240\u5c5e\u5927\u5b66\uff1aStanford</li> <li>\u5148\u4fee\u8981\u6c42\uff1a\u4e00\u5b9a\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840\uff0cCS106L</li> <li>\u7f16\u7a0b\u8bed\u8a00\uff1aC++</li> <li>\u8bfe\u7a0b\u96be\u5ea6\uff1a\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f</li> <li>\u9884\u8ba1\u5b66\u65f6\uff1a100 \u5c0f\u65f6</li> </ul> <p>\u8fd9\u95e8\u8bfe\u7684\u4e3b\u8bb2\u4eba\u4e4b\u4e00\u662f\u7f51\u7edc\u9886\u57df\u7684\u5de8\u64d8 Nick McKeown \u6559\u6388\u3002\u8fd9\u4f4d\u62e5\u6709\u81ea\u5df1\u521b\u4e1a\u516c\u53f8\u7684\u5b66\u754c\u4e1a\u754c\u53cc\u5de8\u4f6c\u4f1a\u5728\u4ed6\u6155\u8bfe\u6bcf\u4e00\u7ae0\u8282\u7684\u6700\u540e\u91c7\u8bbf\u4e00\u4f4d\u4e1a\u754c\u7684\u9ad8\u7ba1\u6216\u8005\u5b66\u754c\u7684\u9ad8\u4eba\uff0c\u975e\u5e38\u5f00\u9614\u773c\u754c\u3002</p> <p>\u5728\u8fd9\u95e8\u8bfe\u7684 Project \u4e2d\uff0c\u4f60\u5c06\u7528 C++ \u5faa\u5e8f\u6e10\u8fdb\u5730\u642d\u5efa\u51fa\u6574\u4e2a TCP/IP \u534f\u8bae\u6808\uff0c\u5b9e\u73b0 IP \u8def\u7531\u4ee5\u53ca ARP \u534f\u8bae\uff0c\u6700\u540e\u5229\u7528\u4f60\u81ea\u5df1\u7684\u534f\u8bae\u6808\u4ee3\u66ff Linux Kernel \u7684\u7f51\u7edc\u534f\u8bae\u6808\u548c\u5176\u4ed6\u5b66\u751f\u7684\u8ba1\u7b97\u673a\u8fdb\u884c\u901a\u4fe1\uff0c\u975e\u5e38 amazing\uff01</p>"},{"location":"Computer%20Network/CS144/#_2","title":"\u8bfe\u7a0b\u8d44\u6e90","text":"<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9\uff1ahttps://cs144.github.io/</li> <li>\u8bfe\u7a0b\u89c6\u9891\uff1ahttps://www.youtube.com/watch?v=r2WZNaFyrbQ&amp;list=PL6RdenZrxrw9inR-IJv-erlOKRHjymxMN</li> <li>\u8bfe\u7a0b\u6559\u6750\uff1a\u65e0</li> <li>\u8bfe\u7a0b\u4f5c\u4e1a\uff1ahttps://cs144.github.io/\uff0c8 \u4e2a Project \u5e26\u4f60\u5b9e\u73b0\u6574\u4e2a TCP/IP \u534f\u8bae\u6808</li> </ul>"},{"location":"Computer%20Network/CS144/#_3","title":"\u8d44\u6e90\u6c47\u603b","text":"<ul> <li>PKUFlyingPig</li> <li>Lexssama's Blogs</li> <li>huangrt01</li> <li>kiprey</li> <li>\u5eb7\u5b87PL's Blog</li> <li>doraemonzzz</li> <li>ViXbob's libsponge</li> <li>\u5403\u7740\u571f\u8c46\u5750\u5730\u94c1\u7684\u535a\u5ba2</li> <li>Smith</li> <li>\u661f\u9065\u89c1</li> <li>EIMadrigal</li> <li>Joey</li> </ul>"},{"location":"Computer%20Network/topdown/","title":"Computer Networking: A Top-Down Approach","text":""},{"location":"Computer%20Network/topdown/#_1","title":"\u8bfe\u7a0b\u7b80\u4ecb","text":"<ul> <li>\u6240\u5c5e\u5927\u5b66\uff1a\u9a6c\u8428\u8bf8\u585e\u5927\u5b66</li> <li>\u5148\u4fee\u8981\u6c42\uff1a\u6709\u4e00\u5b9a\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840</li> <li>\u7f16\u7a0b\u8bed\u8a00\uff1a\u65e0</li> <li>\u8bfe\u7a0b\u96be\u5ea6\uff1a\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f</li> <li>\u9884\u8ba1\u5b66\u65f6\uff1a40 \u5c0f\u65f6</li> </ul> <p>\u300a\u81ea\u9876\u5411\u4e0b\u65b9\u6cd5\u300b\u662f\u8ba1\u7b97\u673a\u7f51\u7edc\u9886\u57df\u7684\u4e00\u672c\u7ecf\u5178\u6559\u6750\uff0c\u4e24\u4f4d\u4f5c\u8005 Jim Kurose \u548c Keith Ross \u7cbe\u5fc3\u5236\u4f5c\u4e86\u6559\u6750\u914d\u5957\u7684\u8bfe\u7a0b\u7f51\u7ad9\uff0c\u5e76\u4e14\u516c\u5f00\u4e86\u81ea\u5df1\u5f55\u5236\u7684\u7f51\u8bfe\u89c6\u9891\uff0c\u4ea4\u4e92\u5f0f\u7684\u5728\u7ebf\u7ae0\u8282\u6d4b\u8bd5\uff0c\u4ee5\u53ca\u5229\u7528 WireShark \u8fdb\u884c\u6293\u5305\u5206\u6790\u7684 lab\u3002\u552f\u4e00\u9057\u61be\u7684\u662f\u8fd9\u95e8\u8bfe\u5e76\u6ca1\u6709\u786c\u6838\u7684\u7f16\u7a0b\u4f5c\u4e1a\uff0c\u800c Stanford \u7684 CS144 \u80fd\u5f88\u597d\u5730\u5f25\u8865\u8fd9\u4e00\u70b9\u3002</p>"},{"location":"Computer%20Network/topdown/#_2","title":"\u8bfe\u7a0b\u8d44\u6e90","text":"<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9\uff1ahttps://gaia.cs.umass.edu/kurose_ross/index.php</li> <li>\u8bfe\u7a0b\u89c6\u9891\uff1ahttps://gaia.cs.umass.edu/kurose_ross/lectures.php</li> <li>\u8bfe\u7a0b\u6559\u6750\uff1aComputer Networking: A Top-Down Approach</li> <li>\u8bfe\u7a0b\u4f5c\u4e1a\uff1ahttps://gaia.cs.umass.edu/kurose_ross/wireshark.php</li> </ul>"},{"location":"Computer%20Network/topdown/#_3","title":"\u8d44\u6e90\u6c47\u603b","text":"<p>@PKUFlyingPig \u5728\u5b66\u4e60\u8fd9\u95e8\u8bfe\u4e2d\u7528\u5230\u7684\u6240\u6709\u8d44\u6e90\u548c\u4f5c\u4e1a\u5b9e\u73b0\u90fd\u6c47\u603b\u5728 PKUFlyingPig/Computer-Network-A-Top-Down-Approach - GitHub \u4e2d\u3002</p>"},{"location":"Computer%20Vision/EECS-498/","title":"UMich EECS 498-007 / 598-005: Deep Learning for Computer Vision","text":""},{"location":"Computer%20Vision/EECS-498/#_1","title":"\u8bfe\u7a0b\u7b80\u4ecb","text":"<ul> <li>\u6240\u5c5e\u5927\u5b66\uff1aUMich</li> <li>\u5148\u4fee\u8981\u6c42\uff1aPython\u57fa\u7840\uff0c\u77e9\u9635\u8bba(\u719f\u6089\u77e9\u9635\u6c42\u5bfc\u5373\u53ef)\uff0c\u5fae\u79ef\u5206</li> <li>\u7f16\u7a0b\u8bed\u8a00\uff1aPython</li> <li>\u8bfe\u7a0b\u96be\u5ea6\uff1a\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f</li> <li>\u9884\u8ba1\u5b66\u65f6\uff1a60\uff5e80 \u5c0f\u65f6</li> </ul> <p>UMich \u7684 Computer Vision \u8bfe\uff0c\u8bfe\u7a0b\u89c6\u9891\u548c\u4f5c\u4e1a\u8d28\u91cf\u6781\u9ad8\uff0c\u6db5\u76d6\u7684\u4e3b\u9898\u975e\u5e38\u5168\uff0c\u540c\u65f6 Assignments \u7684\u96be\u5ea6\u7531\u6d45\u53ca\u6df1\uff0c\u8986\u76d6\u4e86 CV \u4e3b\u6d41\u6a21\u578b\u53d1\u5c55\u7684\u5168\u9636\u6bb5\uff0c\u662f\u4e00\u95e8\u975e\u5e38\u597d\u7684 Computer Vision \u5165\u95e8\u8bfe\u3002</p> <p>\u4f60\u5728\u6bcf\u4e2a Assignment \u91cc\u4f1a\u8ddf\u968f Handouts \u642d\u5efa\u4e0e\u8bad\u7ec3 Lectures \u4e2d\u63d0\u5230\u7684\u6a21\u578b/\u6846\u67b6\u3002</p> <p>\u4f60\u4e0d\u9700\u8981\u6709\u4efb\u4f55\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u7684\u4f7f\u7528\u7ecf\u9a8c\uff0c\u5728\u5f00\u59cb\u7684 Assignment \u91cc\uff0c\u8fd9\u95e8\u8bfe\u4f1a\u4ece\u96f6\u5f00\u59cb\u6559\u5bfc\u6bcf\u4e2a\u5b66\u751f\u5982\u4f55\u4f7f\u7528 Pytorch\uff0c\u540e\u7eed\u4e5f\u53ef\u4ee5\u5f53\u6210\u5de5\u5177\u4e66\uff0c\u968f\u65f6\u7ffb\u9605\u3002</p> <p>\u540c\u65f6\u7531\u4e8e\u6bcf\u4e2a Assignment \u4e4b\u95f4\u6d89\u53ca\u5230\u7684\u4e3b\u9898\u90fd\u4e0d\u540c\uff0c\u4f60\u5728\u9012\u8fdb\u5f0f\u7684 Assignment \u4e2d\u4e0d\u4ec5\u53ef\u4ee5\u4eb2\u8eab\u4f53\u4f1a\u5230 CV \u4e3b\u6d41\u6a21\u578b\u7684\u53d1\u5c55\u5386\u7a0b\uff0c\u9886\u7565\u5230\u4e0d\u540c\u7684\u6a21\u578b\u548c\u8bad\u7ec3\u7684\u65b9\u6cd5\u5bf9\u6700\u7ec8\u6548\u679c/\u51c6\u786e\u7387\u7684\u5f71\u54cd\uff0c\u540c\u65f6\u4e5f\u80fd Hands On \u5730\u5b9e\u73b0\u5b83\u4eec\u3002</p> <p>\u5728 A1 \u4e2d\uff0c\u4f60\u4f1a\u5b66\u4e60 Pytorch \u548c Google Colab \u7684\u4f7f\u7528\u3002</p> <p>\u5728 A2 \u4e2d\u4f60\u4f1a\u4eb2\u81ea\u642d\u5efa Linear Classifier \u4ee5\u53ca\u4e00\u4e2a\u4e24\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u6700\u540e\u4f60\u6709\u673a\u4f1a\u4eb2\u81ea\u63a5\u89e6 MNIST \u6570\u636e\u96c6\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u8bad\u7ec3\u5e76\u8bc4\u4f30\u4f60\u642d\u5efa\u8d77\u7684\u795e\u7ecf\u7f51\u7edc\u3002</p> <p>\u5728 A3 \u4e2d\uff0c\u4f60\u4f1a\u63a5\u89e6\u5230\u6700\u4e3a\u7ecf\u5178\u7684 Convolutional Neural Network (A.K.A. CNN)\uff0c\u4eb2\u81ea\u611f\u53d7\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u9b45\u529b\u3002</p> <p>\u800c\u5728 A4 \u4e2d\uff0c\u4f60\u5c06\u5b9e\u9645\u89e6\u53ca\u642d\u5efa\u7269\u4f53\u68c0\u6d4b\u6a21\u578b\u7684\u5168\u6d41\u7a0b\uff0c\u540c\u65f6\u8ddf\u968f Handout \u5b9e\u73b0\u4e24\u7bc7\u8bba\u6587\u4e2d\u7684 One-Stage Detector \u548c Two-Stage Detector\u3002</p> <p>\u5230\u4e86 A5\uff0c\u5c31\u662f\u4ece CNN \u5230 RNN \u7684\u65f6\u523b\u4e86\uff0c\u4f60\u5c06\u6709\u673a\u4f1a\u4eb2\u81ea\u642d\u5efa\u8d77\u4e24\u79cd\u4e0d\u540c\u7684\u57fa\u4e8e\u6ce8\u610f\u529b\u7684\u6a21\u578b\uff0cRNNs (Vanilla RNN &amp; LSTM) \u548c\u5927\u540d\u9f0e\u9f0e\u7684 Transfomer\u3002</p> <p>\u5728\u6700\u540e\u4e00\u4e2a Assignment\uff08A6\uff09\u4e2d\uff0c\u4f60\u5c06\u6709\u673a\u4f1a\u5b9e\u73b0\u4e24\u79cd\u66f4\u4e3a Fancy \u7684\u6a21\u578b\uff0cVAE \u548c GAN\uff0c\u5e76\u5e94\u7528\u5728 MINST \u6570\u636e\u96c6\u4e0a\u3002\u6700\u540e\uff0c\u4f60\u4f1a\u5b9e\u73b0\u7f51\u7edc\u53ef\u89c6\u5316\u548c\u98ce\u683c\u8fc1\u79fb\u8fd9\u4e24\u4e2a\u975e\u5e38\u9177\u70ab\u7684\u529f\u80fd\u3002</p> <p>\u5728 Assignments \u4e4b\u5916\uff0c\u4f60\u8fd8\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a Mini-Project\uff0c\u4eb2\u81ea\u642d\u5efa\u8d77\u4e00\u4e2a\u5b8c\u6574\u7684\u6df1\u5ea6\u5b66\u4e60 Pipeline\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u8bfe\u7a0b\u4e3b\u9875\u3002</p> <p>\u8bfe\u7a0b\u6240\u6d89\u53ca\u7684\u8d44\u6e90\uff0c\u5982 Lectures/Notes/Assignments \u90fd\u662f\u5f00\u6e90\u7684\uff0c\u7f8e\u4e2d\u4e0d\u8db3\u7684\u662f Autograder \u53ea\u5bf9\u672c\u6821 Enrolled \u7684\u5b66\u751f\u5f00\u653e\uff0c\u4f46\u56e0\u4e3a\u5728\u63d0\u4f9b\u7684 <code>*.ipynb</code>\uff08\u4e5f\u5c31\u662f Handout\uff09 \u4e2d\u5df2\u7ecf\u53ef\u4ee5\u786e\u5b9a\u5b9e\u73b0\u7684\u6b63\u786e\u6027\uff0c\u4ee5\u53ca\u9884\u671f\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u6211\u4e2a\u4eba\u89c9\u5f97 Autograder \u7684\u7f3a\u5931\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u95e8\u8bfe\u7684\u4e3b\u8bb2\u6559\u6388 Justin Johnson \u6b63\u662f Fei-Fei Li \u7684\u535a\u58eb\u6bd5\u4e1a\u751f\uff0c\u73b0\u5728\u5728 UMich \u5f53 Assistant Professor\u3002</p> <p>\u800c\u73b0\u5728\u5f00\u6e90\u7684 2017 \u5e74\u7248\u672c\u7684 Stanford CS231N \u7684\u4e3b\u8bb2\u4eba\u5c31\u662f Justin Johnson\u3002</p> <p>\u540c\u65f6\u56e0\u4e3a CS231N \u4e3b\u8981\u662f\u7531 Justin Johnson \u548c Andrej Karpathy \u5efa\u8bbe\u8d77\u6765\u7684\uff0c\u8fd9\u95e8\u8bfe\u4e5f\u6cbf\u7528\u4e86 CS231N \u7684\u4e00\u4e9b\u6750\u6599\uff0c\u6240\u4ee5\u5b66\u8fc7 CS231N \u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u89c9\u5f97\u8fd9\u95e8\u8bfe\u7684\u67d0\u4e9b\u6750\u6599\u6bd4\u8f83\u719f\u6089\u3002</p> <p>\u6700\u540e\uff0c\u6211\u63a8\u8350\u6bcf\u4e00\u4e2a Enroll \u8fd9\u95e8\u8bfe\u7684\u540c\u5b66\u90fd\u53bb\u770b\u4e00\u770b Youtube \u4e0a\u9762\u7684 Lectures\uff0cJustin Johnson \u7684\u8bb2\u8bfe\u65b9\u5f0f\u548c\u5185\u5bb9\u90fd\u975e\u5e38\u6e05\u6670\u548c\u6613\u61c2\uff0c\u662f\u975e\u5e38\u68d2\u7684\u53c2\u8003\u3002</p>"},{"location":"Computer%20Vision/EECS-498/#_2","title":"\u8bfe\u7a0b\u8d44\u6e90","text":"<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9\uff1ahttps://web.eecs.umich.edu/~justincj/teaching/eecs498/WI2022/</li> <li>\u8bfe\u7a0b\u89c6\u9891\uff1ahttps://www.youtube.com/playlist?list=PL5-TkQAfAZFbzxjBHtzdVCWE0Zbhomg7r</li> <li>\u8bfe\u7a0b\u6559\u6750\uff1a\u4ec5\u6709\u63a8\u8350\u6559\u6750\uff0c\u94fe\u63a5\uff1ahttps://www.deeplearningbook.org/</li> <li>\u8bfe\u7a0b\u4f5c\u4e1a\uff1a\u89c1\u8bfe\u7a0b\u4e3b\u9875\uff0c6 \u4e2a Assignment \u548c\u4e00\u4e2a Mini-Project</li> </ul>"},{"location":"Computer%20Vision/OpenCV/","title":"OpenCV","text":"<p>OpenCV (Open Source Computer Vision) is an open-source library of programming functions mainly aimed at real-time computer vision. It provides a wide range of tools for image processing, video capture and analysis, 3D reconstruction, object detection, and many other applications.</p> <p>OpenCV is written in C/C++ and has bindings for Python, Java, and MATLAB. It is cross-platform and can run on Linux, Windows, and macOS.</p> <p>OpenCV is widely used in academic and industrial research, including in fields such as computer vision, image processing, robotics, and artificial intelligence. It is also used in mobile and embedded devices, including in self-driving cars, drones, and security systems.</p> <p>The OpenCV library is free to use and open-source, and it is available under an open-source license.</p>"},{"location":"Datebase%20Systems/CMU15-445/","title":"CMU 15-445: Database Systems","text":""},{"location":"Datebase%20Systems/CMU15-445/#_1","title":"\u8bfe\u7a0b\u7b80\u4ecb","text":"<ul> <li>\u6240\u5c5e\u5927\u5b66\uff1aCMU</li> <li>\u5148\u4fee\u8981\u6c42\uff1aC++\uff0c\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\uff0cCMU 15-213 (A.K.A. CS:APP\uff0c\u8fd9\u4e5f\u662f CMU \u5185\u90e8\u5bf9\u6bcf\u5e74 Enroll \u540c\u5b66\u7684\u5148\u4fee\u8981\u6c42)</li> <li>\u7f16\u7a0b\u8bed\u8a00\uff1aC++</li> <li>\u8bfe\u7a0b\u96be\u5ea6\uff1a\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f</li> <li>\u9884\u8ba1\u5b66\u65f6\uff1a100 \u5c0f\u65f6</li> </ul> <p>\u4f5c\u4e3a CMU \u6570\u636e\u5e93\u7684\u5165\u95e8\u8bfe\uff0c\u8fd9\u95e8\u8bfe\u7531\u6570\u636e\u5e93\u9886\u57df\u7684\u5927\u725b Andy Pavlo \u8bb2\u6388\uff08\u201c\u8fd9\u4e2a\u4e16\u754c\u4e0a\u6211\u53ea\u5728\u4e4e\u4e24\u4ef6\u4e8b\uff0c\u4e00\u662f\u6211\u7684\u8001\u5a46\uff0c\u4e8c\u5c31\u662f\u6570\u636e\u5e93\u201d\uff09\u3002</p> <p>\u8fd9\u662f\u4e00\u95e8\u8d28\u91cf\u6781\u9ad8\uff0c\u8d44\u6e90\u6781\u9f50\u5168\u7684 Database \u5165\u95e8\u8bfe\uff0c\u8fd9\u95e8\u8bfe\u7684 Faculty \u548c\u80cc\u540e\u7684 CMU Database Group \u5c06\u8bfe\u7a0b\u5bf9\u5e94\u7684\u57fa\u7840\u8bbe\u65bd (Autograder, Discord) \u548c\u8bfe\u7a0b\u8d44\u6599 (Lectures, Notes, Homework) \u5b8c\u5168\u5f00\u6e90\uff0c\u8ba9\u6bcf\u4e00\u4e2a\u613f\u610f\u5b66\u4e60\u6570\u636e\u5e93\u7684\u540c\u5b66\u90fd\u53ef\u4ee5\u4eab\u53d7\u5230\u51e0\u4e4e\u7b49\u540c\u4e8e CMU \u672c\u6821\u5b66\u751f\u7684\u8bfe\u7a0b\u4f53\u9a8c\u3002</p> <p>\u8fd9\u95e8\u8bfe\u7684\u4eae\u70b9\u5728\u4e8e CMU Database Group \u4e13\u95e8\u4e3a\u6b64\u8bfe\u5f00\u53d1\u4e86\u4e00\u4e2a\u6559\u5b66\u7528\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93 bustub\uff0c\u5e76\u8981\u6c42\u4f60\u5bf9\u8fd9\u4e2a\u6570\u636e\u5e93\u7684\u7ec4\u6210\u90e8\u5206\u8fdb\u884c\u4fee\u6539\uff0c\u5b9e\u73b0\u4e0a\u8ff0\u90e8\u4ef6\u7684\u529f\u80fd\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5728 15-445 \u4e2d\u4f60\u9700\u8981\u5728\u56db\u4e2a Project \u7684\u63a8\u8fdb\u4e2d\uff0c\u5b9e\u73b0\u4e00\u4e2a\u9762\u5411\u78c1\u76d8\u7684\u4f20\u7edf\u5173\u7cfb\u578b\u6570\u636e\u5e93 Bustub \u4e2d\u7684\u90e8\u5206\u5173\u952e\u7ec4\u4ef6\u3002</p> <p>\u5305\u62ec Buffer Pool Manager (\u5185\u5b58\u7ba1\u7406), B Plus Tree (\u5b58\u50a8\u5f15\u64ce), Query Executors &amp; Query Optimizer (\u7b97\u5b50\u4eec &amp; \u4f18\u5316\u5668), Concurrency Control (\u5e76\u53d1\u63a7\u5236)\uff0c\u5206\u522b\u5bf9\u5e94 <code>Project #1</code> \u5230 <code>Project #4</code>\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u540c\u5b66\u4eec\u5728\u5b9e\u73b0\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u901a\u8fc7 <code>shell.cpp</code> \u7f16\u8bd1\u51fa <code>bustub-shell</code> \u6765\u5b9e\u65f6\u5730\u89c2\u6d4b\u81ea\u5df1\u5b9e\u73b0\u90e8\u4ef6\u7684\u6b63\u786e\u4e0e\u5426\uff0c\u6b63\u53cd\u9988\u975e\u5e38\u8db3\u3002</p> <p>\u6b64\u5916 bustub \u4f5c\u4e3a\u4e00\u4e2a C++ \u7f16\u5199\u7684\u4e2d\u5c0f\u578b\u9879\u76ee\u6db5\u76d6\u4e86\u7a0b\u5e8f\u6784\u5efa\u3001\u4ee3\u7801\u89c4\u8303\u3001\u5355\u5143\u6d4b\u8bd5\u7b49\u4f17\u591a\u8981\u6c42\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u4f18\u79c0\u7684\u5f00\u6e90\u9879\u76ee\u5b66\u4e60\u3002</p>"},{"location":"Datebase%20Systems/CMU15-445/#_2","title":"\u8bfe\u7a0b\u8d44\u6e90","text":"<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9\uff1aFall 2019, Fall 2020, Fall 2021, Fall 2022, Spring 2023, Fall 2023, Spring 2024</li> <li>\u8bfe\u7a0b\u89c6\u9891\uff1a\u8bfe\u7a0b\u7f51\u7ad9\u514d\u8d39\u89c2\u770b, Fall 2023 \u7684 Youtube \u5168\u5f00\u6e90 Lectures</li> <li>\u8bfe\u7a0b\u6559\u6750\uff1aDatabase System Concepts</li> <li>\u8bfe\u7a0b\u4f5c\u4e1a\uff1a5 \u4e2a Project \u548c 5 \u4e2a Homework</li> </ul> <p>\u5728 Fall 2019 \u4e2d\uff0c<code>Project #2</code> \u662f\u505a\u54c8\u5e0c\u7d22\u5f15\uff0c<code>Project #4</code> \u662f\u505a\u65e5\u5fd7\u4e0e\u6062\u590d\u3002</p> <p>\u5728 Fall 2020 \u4e2d\uff0c<code>Project #2</code> \u662f\u505a B \u6811\uff0c<code>Project #4</code> \u662f\u505a\u5e76\u53d1\u63a7\u5236\u3002</p> <p>\u5728 Fall 2021 \u4e2d\uff0c<code>Project #1</code> \u662f\u505a\u7f13\u5b58\u6c60\u7ba1\u7406\uff0c<code>Project #2</code> \u662f\u505a\u54c8\u5e0c\u7d22\u5f15\uff0c<code>Project #4</code> \u662f\u505a\u5e76\u53d1\u63a7\u5236\u3002</p> <p>\u5728 Fall 2022 \u4e2d\uff0c\u4e0e Fall 2021 \u76f8\u6bd4\u53ea\u6709\u54c8\u5e0c\u7d22\u5f15\u6362\u6210\u4e86 B+ \u6811\u7d22\u5f15\uff0c\u5176\u4f59\u90fd\u4e00\u6837\u3002</p> <p>\u5728 Spring 2023 \u4e2d\uff0c\u5927\u4f53\u5185\u5bb9\u548c Fall 2022 \u4e00\u6837\uff08\u7f13\u5b58\u6c60\uff0cB+ \u6811\u7d22\u5f15\uff0c\u7b97\u5b50\uff0c\u5e76\u53d1\u63a7\u5236\uff09\uff0c\u53ea\u4e0d\u8fc7 <code>Project #0</code> \u6362\u6210\u4e86 <code>Copy-On-Write Trie</code>\uff0c\u540c\u65f6\u589e\u52a0\u4e86\u5f88\u597d\u73a9\u7684\u6ce8\u518c\u5927\u5c0f\u5199\u51fd\u6570\u7684 Task\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u7f16\u8bd1\u51fa\u7684 <code>bustub-shell</code> \u4e2d\u770b\u5230\u81ea\u5df1\u5199\u7684\u51fd\u6570\u7684\u5b9e\u9645\u6548\u679c\uff0c\u975e\u5e38\u6709\u6210\u5c31\u611f\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u73b0\u5728 bustub \u5728 2020 \u5e74\u4ee5\u524d\u7684 version \u90fd\u5df2\u7ecf\u505c\u6b62\u7ef4\u62a4\u3002</p> <p>Fall 2019 \u7684\u6700\u540e\u4e00\u4e2a <code>Logging &amp; Recovery</code> \u7684 Project \u5df2\u7ecf broken \u4e86\uff08\u572819\u5e74\u7684 <code>git head</code> \u4e0a\u4e5f\u8bb8\u8fd8\u53ef\u4ee5\u8dd1\uff0c\u4f46\u5c3d\u7ba1\u5982\u6b64 Gradescope \u5e94\u8be5\u4e5f\u6ca1\u6709\u63d0\u4f9b\u516c\u5171\u7684\u7248\u672c\uff0c\u6240\u4ee5\u5e76\u4e0d\u63a8\u8350\u5927\u5bb6\u53bb\u505a\uff0c\u53ea\u770b\u770b\u4ee3\u7801\u548c Handout \u5c31\u53ef\u4ee5\u4e86\uff09\u3002</p> <p>\u6216\u8bb8\u5728 Fall 2023 \u7684\u7248\u672c Recovery \u76f8\u5173\u7684\u529f\u80fd\u4f1a\u88ab\u4fee\u590d\uff0c\u5c4a\u65f6\u4e5f\u53ef\u80fd\u6709\u5168\u65b0\u7684 <code>Recovery Project</code>\uff0c\u8ba9\u6211\u4eec\u8bd5\u76ee\u4ee5\u5f85\u5427\ud83e\udd2a</p> <p>\u5982\u679c\u5927\u5bb6\u6709\u7cbe\u529b\u7684\u8bdd\u53ef\u4ee5\u90fd\u53bb\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u6216\u8005\u5728\u5bf9\u4e66\u4e2d\u5185\u5bb9\u7406\u89e3\u4e0d\u662f\u5f88\u900f\u5f7b\u7684\u65f6\u5019\uff0c\u5c1d\u8bd5\u505a\u4e00\u505a\u5bf9\u5e94\u7684 Project \u4f1a\u52a0\u6df1\u4f60\u7684\u7406\u89e3\uff08\u4e2a\u4eba\u5efa\u8bae\u8fd8\u662f\u8981\u5168\u90e8\u505a\u5b8c\uff0c\u76f8\u4fe1\u4e00\u5b9a\u5bf9\u4f60\u6709\u5e2e\u52a9\uff09\u3002</p> <p>\u6b64\u5916\uff0cCMU\u6570\u636e\u5e93\u56e2\u961f\u8fd8\u6709\u4e00\u4e2aDB with ML\u7684\u516c\u5f00\u8bb2\u5ea7\u7cfb\u5217\uff1aML\u21c4DB Seminar Series</p>"},{"location":"Datebase%20Systems/CMU15-445/#_3","title":"\u8d44\u6e90\u6c47\u603b","text":"<p>\u975e\u5b98\u65b9\u7684 Discord \u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4ea4\u6d41\u5e73\u53f0\uff0c\u8fc7\u5f80\u7684\u804a\u5929\u8bb0\u5f55\u51e0\u4e4e\u8bb0\u8f7d\u4e86\u5176\u4ed6\u540c\u5b66\u8e29\u8fc7\u7684\u5751\uff0c\u4f60\u4e5f\u53ef\u4ee5\u63d0\u51fa\u4f60\u7684\u95ee\u9898\uff0c\u6216\u8005\u5e2e\u5fd9\u89e3\u7b54\u522b\u4eba\u7684\u95ee\u9898\uff0c\u76f8\u4fe1\u8fd9\u662f\u4e00\u4efd\u5f88\u597d\u7684\u53c2\u8003\u3002</p> <p>\u5173\u4e8e Spring 2023 \u7684\u901a\u5173\u6307\u5357\uff0c\u53ef\u4ee5\u53c2\u8003 @xzhseh \u7684\u8fd9\u7bc7CMU 15-445/645 (Spring 2023) Database Systems \u901a\u5173\u6307\u5317\uff0c\u91cc\u9762\u6db5\u76d6\u4e86\u5168\u90e8\u4f60\u9700\u8981\u7684\u901a\u5173\u9053\u5177\uff0c\u548c\u901a\u5173\u65b9\u5f0f\u5efa\u8bae\uff0c\u4ee5\u53ca\u6700\u91cd\u8981\u7684\uff0c\u6211\u81ea\u5df1\u5728\u505a Project \u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\uff0c\u770b\u5230\u7684\uff0c\u548c\u81ea\u5df1\u4eb2\u81ea\u8e29\u8fc7\u7684\u5751\u3002</p> <p>@ysj1173886760 \u5728\u5b66\u4e60\u8fd9\u95e8\u8bfe\u4e2d\u7528\u5230\u7684\u6240\u6709\u8d44\u6e90\u548c\u4f5c\u4e1a\u5b9e\u73b0\u90fd\u6c47\u603b\u5728 ysj1173886760/Learning: db - GitHub \u4e2d\u3002</p> <p>\u7531\u4e8e Andy \u7684\u8981\u6c42\uff0c\u4ed3\u5e93\u4e2d\u6ca1\u6709 Project \u7684\u5b9e\u73b0\uff0c\u53ea\u6709 Homework \u7684 Solution\u3002\u7279\u522b\u7684\uff0c\u5bf9\u4e8e Homework1\uff0c@ysj1173886760 \u8fd8\u5199\u4e86\u4e00\u4e2a Shell \u811a\u672c\u6765\u5e2e\u5927\u5bb6\u6267\u884c\u81ea\u52a8\u5224\u5206\u3002</p> <p>\u53e6\u5916\u5728\u8bfe\u7a0b\u7ed3\u675f\u540e\uff0c\u63a8\u8350\u9605\u8bfb\u4e00\u7bc7\u8bba\u6587 Architecture Of a Database System\uff0c\u5bf9\u5e94\u7684\u4e2d\u6587\u7248\u4e5f\u5728\u4e0a\u8ff0\u4ed3\u5e93\u4e2d\u3002\u8bba\u6587\u91cc\u7efc\u8ff0\u4e86\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6574\u4f53\u67b6\u6784\uff0c\u8ba9\u5927\u5bb6\u53ef\u4ee5\u5bf9\u6570\u636e\u5e93\u6709\u4e00\u4e2a\u66f4\u52a0\u5168\u9762\u7684\u89c6\u91ce\u3002</p>"},{"location":"Datebase%20Systems/CMU15-445/#_4","title":"\u540e\u7eed\u8bfe\u7a0b","text":"<p>CMU15-721 \u4e3b\u8981\u8bb2\u4e3b\u5b58\u6570\u636e\u5e93\u6709\u5173\u7684\u5185\u5bb9\uff0c\u6bcf\u8282\u8bfe\u90fd\u6709\u5bf9\u5e94\u7684 paper \u8981\u8bfb\uff0c\u63a8\u8350\u7ed9\u5e0c\u671b\u8fdb\u9636\u6570\u636e\u5e93\u7684\u5c0f\u4f19\u4f34\u3002@ysj1173886760 \u76ee\u524d\u4e5f\u5728\u8ddf\u8fdb\u8fd9\u95e8\u8bfe\uff0c\u5b8c\u6210\u540e\u4f1a\u5728\u8fd9\u91cc\u63d0 PR \u4ee5\u63d0\u4f9b\u8fdb\u9636\u7684\u6307\u5bfc\u3002</p>"},{"location":"Deep%20Learning/CS224n/","title":"CS224n: Natural Language Processing","text":""},{"location":"Deep%20Learning/CS224n/#_1","title":"\u8bfe\u7a0b\u7b80\u4ecb","text":"<ul> <li>\u6240\u5c5e\u5927\u5b66\uff1aStanford</li> <li>\u5148\u4fee\u8981\u6c42\uff1a\u6df1\u5ea6\u5b66\u4e60\u57fa\u7840 + Python</li> <li>\u7f16\u7a0b\u8bed\u8a00\uff1aPython</li> <li>\u8bfe\u7a0b\u96be\u5ea6\uff1a\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f</li> <li>\u9884\u8ba1\u5b66\u65f6\uff1a80 \u5c0f\u65f6</li> </ul> <p>Stanford \u7684 NLP \u5165\u95e8\u8bfe\u7a0b\uff0c\u7531\u81ea\u7136\u8bed\u8a00\u5904\u7406\u9886\u57df\u7684\u5de8\u4f6c Chris Manning \u9886\u8854\u6559\u6388\uff08word2vec \u7b97\u6cd5\u7684\u5f00\u521b\u8005\uff09\u3002\u5185\u5bb9\u8986\u76d6\u4e86\u8bcd\u5411\u91cf\u3001RNN\u3001LSTM\u3001Seq2Seq \u6a21\u578b\u3001\u673a\u5668\u7ffb\u8bd1\u3001\u6ce8\u610f\u529b\u673a\u5236\u3001Transformer \u7b49\u7b49 NLP \u9886\u57df\u7684\u6838\u5fc3\u77e5\u8bc6\u70b9\u3002</p> <p>5 \u4e2a\u7f16\u7a0b\u4f5c\u4e1a\u96be\u5ea6\u5faa\u5e8f\u6e10\u8fdb\uff0c\u5206\u522b\u662f\u8bcd\u5411\u91cf\u3001word2vec \u7b97\u6cd5\u3001Dependency parsing\u3001\u673a\u5668\u7ffb\u8bd1\u4ee5\u53ca Transformer \u7684 fine-tune\u3002</p> <p>\u6700\u7ec8\u7684\u5927\u4f5c\u4e1a\u662f\u5728 Stanford \u8457\u540d\u7684 SQuAD \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3 QA \u6a21\u578b\uff0c\u6709\u5b66\u751f\u7684\u5927\u4f5c\u4e1a\u751a\u81f3\u76f4\u63a5\u53d1\u8868\u4e86\u9876\u4f1a\u8bba\u6587\u3002</p>"},{"location":"Deep%20Learning/CS224n/#_2","title":"\u8bfe\u7a0b\u8d44\u6e90","text":"<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9\uff1ahttp://web.stanford.edu/class/cs224n/index.html</li> <li>\u8bfe\u7a0b\u89c6\u9891\uff1aB \u7ad9\u641c\u7d22 CS224n</li> <li>\u8bfe\u7a0b\u6559\u6750\uff1a\u65e0</li> <li>\u8bfe\u7a0b\u4f5c\u4e1a\uff1ahttp://web.stanford.edu/class/cs224n/index.html\uff0c5 \u4e2a\u7f16\u7a0b\u4f5c\u4e1a + 1 \u4e2a Final Project</li> </ul>"},{"location":"Deep%20Learning/CS224n/#_3","title":"\u8d44\u6e90\u6c47\u603b","text":"<p>@PKUFlyingPig \u5728\u5b66\u4e60\u8fd9\u95e8\u8bfe\u4e2d\u7528\u5230\u7684\u6240\u6709\u8d44\u6e90\u548c\u4f5c\u4e1a\u5b9e\u73b0\u90fd\u6c47\u603b\u5728 PKUFlyingPig/CS224n - GitHub \u4e2d\u3002</p>"},{"location":"Functional%20Programming/Haskell/","title":"Haskell","text":"<p>Haskell is a purely functional programming language. It is known for its speed and reliability, and it is often used in industry for building large-scale software systems.</p>"},{"location":"Functional%20Programming/Haskell/#resources","title":"Resources","text":"<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9\uff1ahttps://haskell.mooc.fi/</li> <li>\u8bfe\u7a0b\u4f5c\u4e1a\uff1ahttps://github.com/moocfi/haskell-mooc</li> <li>\u793e\u533a\uff1ahttps://t.me/haskell_mooc_fi</li> </ul>"},{"location":"Functional%20Programming/Lean4/","title":"Lean4","text":"<p>Lean4 is a programming language developed by Microsoft Research. It is a functional programming language that is based on theorem proving and dependent type theory. It is designed to be easy to use and easy to understand. It is also designed to be efficient and scalable.</p>"},{"location":"Functional%20Programming/Lean4/#resources","title":"Resources","text":"<ul> <li>Lean4 Documentation</li> <li>Lean4 Tutorial</li> <li>Lean4 Book</li> <li>Lean4 Docs</li> </ul>"},{"location":"LLM%20Development/LangChain/","title":"LangChain","text":"<p>LangChain is a project that aims to create a language-agnostic, open-source, and community-driven framework for language learning.</p> <p>The framework will be designed to be modular and extensible, allowing for easy integration of new languages and features. The framework will also be designed to be user-friendly and accessible, with clear documentation and tutorials.</p> <p>The LangChain framework will be open-source and available for anyone to use and contribute to. The project will be developed in the open, with all code and documentation available for anyone to view and use.</p> <p>The LangChain framework will be designed to be language-agnostic, meaning that it will be able to support any language that has a written alphabet. This will allow for easy integration of new languages and features, as well as the ability to create language-specific tools and resources.</p> <p>The LangChain framework will be community-driven, meaning that it will be open to anyone who wants to contribute to the project. Anyone can submit new languages, features, or tools, and the LangChain team will review and approve them. This will allow for a collaborative and diverse community to develop and improve the framework.</p> <p>The LangChain framework will be designed to be scalable, meaning that it will be able to handle large amounts of data and users. The framework will be designed to be efficient and scalable, with features such as caching and optimization in mind. The LangChain team will work to ensure that the framework is optimized for performance and scalability, and that it can handle large amounts of data and users.</p> <p>The LangChain framework will be designed to be accessible, meaning that it will be designed to be easy to use and understand. The framework will be designed to be user-friendly and intuitive, with clear documentation and tutorials. The LangChain team will work to ensure that the framework is easy to use and understand, and that it is accessible to all users.</p> <p>The LangChain framework will be designed to be secure, meaning that it will be designed to protect user data and prevent unauthorized access. The framework will be designed to be secure and safe, with features such as encryption and authentication in mind. The LangChain team will work to ensure that the framework is secure and safe, and that it protects user data and prevents unauthorized access.</p> <p>The LangChain framework will be designed to be inclusive, meaning that it will be designed to be accessible to people with disabilities. The framework will be designed to be accessible and inclusive, with features such as high contrast and easy-to-read fonts in mind. The LangChain team will work to ensure that the framework is accessible and inclusive, and that it is designed to be used by people with disabilities.</p>"},{"location":"LLM%20Development/Llama2/","title":"Llama2","text":""},{"location":"LLM%20Development/Llama2/#localizing-llama2","title":"Localizing Llama2","text":"<p>\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u8d44\u6599\u4ee5\u90e8\u7f72Llama2\uff1a</p> <ul> <li>LLM\u63a2\u7d22\uff1a\u73af\u5883\u642d\u5efa\u4e0e\u6a21\u578b\u672c\u5730\u90e8\u7f72</li> <li>\u672c\u5730\u90e8\u7f72\u5f00\u6e90\u5927\u6a21\u578b\u7684\u5b8c\u6574\u6559\u7a0b\uff1aLangChain + Streamlit+ Llama</li> </ul>"},{"location":"LLM%20Development/Llama2/#introduction","title":"Introduction","text":"<p>Llama2 is a new generation of Llama, a high-performance, low-latency, and scalable messaging system. Llama2 is designed to be a drop-in replacement for Llama, and provides a better performance, scalability, and reliability. Llama2 is also designed to be more flexible and extensible, allowing for new features and functionality to be added as needed.</p> <p>Llama2 is built on top of the Apache Kafka messaging system, which is widely used in the industry for high-throughput, low-latency messaging. Llama2 is designed to be compatible with Kafka, and can be used as a drop-in replacement for Llama. Llama2 also provides a rich set of features and functionality that are not available in Llama, such as message routing, message filtering, and message transformation.</p> <p>Llama2 is designed to be easy to use and deploy, and can be deployed on-premises or in the cloud. Llama2 is also designed to be highly available and fault-tolerant, and can handle a wide range of workloads and use cases.</p>"},{"location":"LLM%20Development/Llama2/#deploy","title":"Deploy","text":"<p>To deploy Llama2, follow the steps below:</p> <ol> <li>Install Llama2 on your server or cluster.</li> <li>Configure Llama2 to connect to your Kafka cluster.</li> <li>Start sending and receiving messages using Llama2.</li> </ol>"},{"location":"LLM%20Development/Llama2/#features","title":"Features","text":"<p>Llama2 provides a rich set of features and functionality that are not available in Llama. Some of the key features of Llama2 are:</p> <ol> <li>Message routing: Llama2 allows you to route messages to different topics based on certain criteria, such as message content or metadata.</li> <li>Message filtering: Llama2 allows you to filter messages based on certain criteria, such as message content or metadata.</li> <li>Message transformation: Llama2 allows you to transform messages into a different format, such as JSON or XML.</li> <li>Message delivery guarantee: Llama2 provides a delivery guarantee that ensures that messages are delivered at least once, exactly once, or at most once.</li> <li>Message replay: Llama2 allows you to replay messages that have been consumed before.</li> <li>Message retention: Llama2 allows you to set a retention policy for messages, which determines how long messages are kept in the system.</li> <li>Message compression: Llama2 allows you to compress messages to reduce the amount of data that needs to be stored and transmitted.</li> <li>Message ordering: Llama2 ensures that messages are delivered in the order they are sent.</li> <li>Message replay: Llama2 allows you to replay messages that have been consumed before.</li> <li>Message batching: Llama2 allows you to batch messages together and send them in a single request.</li> <li>Message re-partitioning: Llama2 allows you to re-partition messages to different topics based on certain criteria, such as message content or metadata.</li> <li>Message re-ordering: Llama2 allows you to re-order messages based on certain criteria, such as message content or metadata.</li> <li>Message de-duplication: Llama2 allows you to de-duplicate messages based on certain criteria, such as message content or metadata.</li> <li>Message encryption: Llama2 allows you to encrypt messages using various encryption algorithms, such as AES, RSA, and HMAC.</li> <li>Message authentication: Llama2 allows you to authenticate messages using various authentication mechanisms, such as SSL, SASL, and OAuth.</li> <li>Message compression: Llama2 allows you to compress messages using various compression algorithms, such as Gzip, Snappy, and LZ4.</li> <li>Message indexing: Llama2 allows you to index messages using various indexing techniques, such as Apache Solr, Elasticsearch, and Apache Lucene.</li> <li>Message monitoring: Llama2 provides monitoring capabilities that allow you to track the performance and health of your Llama2 cluster.</li> <li>Message security: Llama2 provides security features that allow you to secure your Llama2 cluster.</li> </ol>"},{"location":"LLM%20Development/Llama2/#conclusion","title":"Conclusion","text":"<p>Llama2 is a new generation of Llama, a high-performance, low-latency, and scalable messaging system. Llama2 is designed to be a drop-in replacement for Llama, and provides a better performance, scalability, and reliability. Llama2 is also designed to be more flexible and extensible, allowing for new features and functionality to be added as needed.</p> <p>Llama2 is built on top of the Apache Kafka messaging system, which is widely used in the industry for high-throughput, low-latency messaging. Llama2 is designed to be compatible with Kafka, and can be used as a drop-in replacement for Llama. Llama2 also provides a rich set of features and functionality that are not available in Llama, such as message routing, message filtering, and message transformation.</p> <p>Llama2 is designed to be easy to use and deploy, and can be deployed on-premises or in the cloud. Llama2 is also designed to be highly available and fault-tolerant, and can handle a wide range of workloads and use cases.</p>"},{"location":"Machine%20Learning/CS189/","title":"CS189: Introduction to Machine Learning","text":""},{"location":"Machine%20Learning/CS189/#_1","title":"\u8bfe\u7a0b\u7b80\u4ecb","text":"<ul> <li>\u6240\u5c5e\u5927\u5b66\uff1aUC Berkeley</li> <li>\u5148\u4fee\u8981\u6c42\uff1aCS188, CS70</li> <li>\u7f16\u7a0b\u8bed\u8a00\uff1aPython</li> <li>\u8bfe\u7a0b\u96be\u5ea6\uff1a\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f</li> <li>\u9884\u8ba1\u5b66\u65f6\uff1a100 \u5c0f\u65f6</li> </ul> <p>\u8fd9\u95e8\u8bfe\u6211\u6ca1\u6709\u7cfb\u7edf\u4e0a\u8fc7\uff0c\u53ea\u662f\u628a\u5b83\u7684\u8bfe\u7a0b notes \u4f5c\u4e3a\u5de5\u5177\u4e66\u67e5\u9605\u3002\u4e0d\u8fc7\u4ece\u8bfe\u7a0b\u7f51\u7ad9\u4e0a\u6765\u770b\uff0c\u5b83\u6bd4 CS229 \u597d\u7684\u662f\u5f00\u6e90\u4e86\u6240\u6709 homework \u7684\u4ee3\u7801\u4ee5\u53ca gradescope \u7684 autograder\u3002\u540c\u6837\uff0c\u8fd9\u95e8\u8bfe\u8bb2\u5f97\u76f8\u5f53\u7406\u8bba\u4e14\u6df1\u5165\u3002</p>"},{"location":"Machine%20Learning/CS189/#_2","title":"\u8bfe\u7a0b\u8d44\u6e90","text":"<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9\uff1ahttps://www.eecs189.org/</li> <li>\u8bfe\u7a0b\u5b89\u6392\uff1ahttps://people.eecs.berkeley.edu/~jrs/189/</li> <li>\u8bfe\u7a0b\u89c6\u9891\uff1ahttps://www.youtube.com/playlist?list=PLCuQm2FL98HTlRmlwMk2AuFEM9n1c06HE</li> <li>\u8bfe\u7a0b\u6559\u6750\uff1ahttps://www.eecs189.org/</li> <li>\u8bfe\u7a0b\u4f5c\u4e1a\uff1ahttps://www.eecs189.org/</li> </ul>"},{"location":"OOP/C%2B%2B/","title":"C++","text":"<p>\u5728\u672c\u90e8\u5206\uff0c\u4e3b\u8981\u4ecb\u7ecd\u4e00\u4e9bC++\u7684\u65b0\u7279\u6027\u3002</p>"},{"location":"OOP/C%2B%2B/#_1","title":"\u79fb\u52a8\u8bed\u4e49","text":"<p>\u79fb\u52a8\u8bed\u4e49\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u8d44\u6599\uff1a</p> <ul> <li>\u79fb\u52a8\u8bed\u4e49\u4e00\u6587\u5165\u9b42</li> </ul>"},{"location":"OOP/C%2B%2B/#modern-c","title":"Modern C++\u8bed\u6cd5\u7279\u6027","text":"<ul> <li>CppCoreGuidelines</li> <li>Modern C++</li> </ul>"},{"location":"OOP/Java/","title":"Java","text":"<p>Java is a class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible. It is a general-purpose programming language intended to let application developers write once, run anywhere (WORA), meaning that compiled Java code can run on all platforms that support Java without the need for recompilation.</p>"},{"location":"Potpourri/CUDA/","title":"CUDA","text":"<p>CUDA is a parallel computing platform and programming model created by Nvidia. It allows developers to write high-performance parallel applications using a combination of C/C++, CUDA C/C++, and Fortran. CUDA provides a rich set of APIs for parallel programming, including parallel thread execution, memory management, and device management. CUDA also includes a compiler toolchain that can generate optimized code for various architectures, including x86, x86-64, ARM, and PowerPC. CUDA is widely used in scientific computing, graphics processing, and machine learning applications.</p> <p>CUDA is available for free download and installation on Windows, Linux, and macOS platforms. It is also available as a part of popular cloud computing platforms such as Amazon Web Services, Google Cloud Platform, and Microsoft Azure.</p> <p>CUDA is a powerful tool for parallel computing and is widely used in a wide range of applications. It is a good choice for developers who are interested in developing high-performance parallel applications using CUDA.</p>"},{"location":"Potpourri/CUDA/#cuda-programming-model","title":"CUDA Programming Model","text":"<p>The CUDA programming model is based on a combination of C/C++ and CUDA C/C++. CUDA C/C++ is a high-level language that is designed to work with CUDA. It provides a set of built-in functions and operators that can be used to write parallel code. CUDA C/C++ code is compiled into a CUDA executable that can be run on a GPU.</p> <p>The CUDA programming model consists of several components:  </p> <ul> <li>Host code: This is the code that is executed on the CPU. It interacts with the device code to perform parallel computations.</li> <li>Device code: This is the code that is executed on the GPU. It is written in CUDA C/C++ and is executed on a single thread on the GPU. </li> </ul>"},{"location":"Potpourri/CUDA/#c-and-cuda-cc","title":"C++ and CUDA C/C++","text":"<p>C++ and CUDA C/C++ are two different programming languages. C++ is a general-purpose programming language that is widely used in software development. CUDA C/C++ is a programming language that is designed to work with CUDA. It is a subset of C++ that is specifically designed for parallel computing. CUDA C/C++ code can be compiled into a CUDA executable that can be run on a GPU.</p> <p>C++ and CUDA C/C++ are both high-level languages that are used to write parallel applications. C++ is a general-purpose language that is used to write applications that can run on any platform. CUDA C/C++ is a subset of C++ that is specifically designed for parallel computing. CUDA C/C++ code can be compiled into a CUDA executable that can be run on a GPU.</p>"},{"location":"Potpourri/CUDA/#cuda-libraries","title":"CUDA Libraries","text":"<p>CUDA provides a rich set of libraries that can be used to develop parallel applications. These libraries include CUDA Runtime API, CUDA Driver API, CUDA Math API, CUDA Graph API, CUDA Profiler API, CUDA Cooperative Groups API, CUDA Texture Memory API, CUDA Surface Memory API, CUDA Dynamic Parallelism API, CUDA Direct3D Interoperability, CUDA OpenGL Interoperability, CUDA VDPAU Interoperability, CUDA D3D10 Interoperability, CUDA D3D11 Interoperability, CUDA D3D12 Interoperability, CUDA OpenCL Interoperability, CUDA Level-Zero Interoperability, CUDA Profiler, CUDA Memcheck, CUDA Memcached, CUDA Thrust, and CUDA Python.</p> <p>CUDA libraries are designed to work with CUDA C/C++ and provide a set of APIs for parallel programming. These libraries can be used to develop parallel applications that can run on a GPU. CUDA libraries can be used to optimize performance, reduce memory usage, and improve application performance.</p>"},{"location":"Potpourri/CUDA/#cuda-programming-tools","title":"CUDA Programming Tools","text":"<p>CUDA provides a set of tools that can be used to develop and debug CUDA applications. These tools include CUDA Compiler, CUDA Debugger, CUDA Profiler, CUDA Memcheck, CUDA Memcached, CUDA Thrust, and CUDA Python.</p> <p>CUDA Compiler is a tool that is used to compile CUDA C/C++ code into a CUDA executable. CUDA Debugger is a tool that is used to debug CUDA applications. CUDA Profiler is a tool that is used to profile CUDA applications. CUDA Memcheck is a tool that is used to detect memory errors in CUDA applications. CUDA Memcached is a tool that is used to cache CUDA application data in memory. CUDA Thrust is a library that is used to write parallel algorithms in CUDA C/C++. CUDA Python is a library that is used to write CUDA applications in Python.</p> <p>CUDA tools can be used to develop and debug CUDA applications. They can help to identify and fix errors in CUDA applications, optimize performance, and reduce memory usage.</p>"},{"location":"Potpourri/Huggingface/","title":"Huggingface","text":"<p>Huggingface is a popular NLP library that provides a lot of pre-trained models for various tasks such as text classification, named entity recognition, and question answering. It also provides a simple interface for training and fine-tuning these models on custom datasets.</p> <p>Here is an example of how to use Huggingface to fine-tune a pre-trained model for sentiment analysis on a custom dataset:</p> <pre><code>from transformers import pipeline\n\nclassifier = pipeline('sentiment-analysis')\n\n# Custom dataset\ndata = [\n    (\"I love this movie\", \"positive\"),\n    (\"This is a terrible movie\", \"negative\"),\n    (\"I hate it\", \"negative\"),\n    (\"I don't care\", \"neutral\"),\n    (\"I'm so happy today\", \"positive\"),\n]\n\n# Fine-tune the pre-trained model on the custom dataset\nclassifier.train(data)\n\n# Test the fine-tuned model\nresult = classifier(\"I'm so happy today\")\nprint(result)\n</code></pre> <p>This code will fine-tune a pre-trained model for sentiment analysis on the custom dataset and then test the fine-tuned model on a sample sentence. The output will be a dictionary containing the predicted sentiment and its corresponding score.  </p> <p>You can also use Huggingface to perform other NLP tasks such as text classification, named entity recognition, and question answering.</p>"},{"location":"Potpourri/Manim/","title":"Manim","text":""},{"location":"Potpourri/Manim/#introduction","title":"Introduction","text":"<p>Manim is a Python library for creating mathematical animations, which is based on the idea of creating mathematical objects and transforming them over time. It is an open-source project and is maintained by the community. It is used to create visualizations, simulations, and animations for a wide range of applications, including computer science, mathematics, physics, and more.</p>"},{"location":"Potpourri/Manim/#installation","title":"Installation","text":"<p>To install Manim, you need to have Python installed on your system. You can download and install Python from the official website. Once you have Python installed, you can install Manim using the following command:</p> <pre><code>pip install manim\n</code></pre> <p>This will install Manim and all its dependencies.</p>"},{"location":"Potpourri/Manim/#creating-animations","title":"Creating Animations","text":"<p>To create an animation, you need to create a Python file and use the <code>Scene</code> class from Manim. Here is an example:</p> <pre><code>from manim import *\n\nclass SquareToCircle(Scene):\n    def construct(self):\n        square = Square()\n        circle = Circle()\n        self.play(Transform(square, circle))\n</code></pre> <ol> <li>The <code>Scene</code> class is imported from Manim.</li> <li>A new class called <code>SquareToCircle</code> is created which inherits from the <code>Scene</code> class.</li> <li>The <code>construct</code> method is defined which is the entry point for the animation.</li> <li>Two objects, a square and a circle, are created.</li> <li>The <code>Transform</code> animation is played, which transforms the square into the circle.</li> </ol>"},{"location":"Potpourri/Manim/#running-animations","title":"Running Animations","text":"<p>To run the animation, you need to save the Python file and run it using the following command:</p> <pre><code>manim example.py SquareToCircle\n</code></pre> <p>This will run the animation and save the output as a video file. You can specify the resolution, frame rate, and other options using the command line arguments.    </p>"},{"location":"Potpourri/Manim/#resources","title":"Resources","text":"<ul> <li>Manim Website</li> <li>Manim Documentation</li> <li>Manim GitHub Repository</li> </ul>"},{"location":"Potpourri/SocketIO/","title":"Socket.IO","text":"<p>Socket.IO is a real-time communication framework that enables real-time bidirectional communication between the client and the server. It uses WebSockets as a transport layer and provides a simple API for real-time communication. Socket.IO is a JavaScript library that runs in the browser and enables real-time communication between the client and the server.</p>"},{"location":"Potpourri/SocketIO/#resources","title":"Resources","text":"<ul> <li>Socket.IO Documentation</li> <li>Socket.IO Client-Side Library</li> <li>Socket.IO Server-Side Library</li> <li>Flask-SocketIO Documentation</li> </ul>"},{"location":"Potpourri/SocketIO/#socketio-in-python","title":"Socket.IO in Python","text":"<p>Socket.IO can be used in Python using the <code>python-socketio</code> library. The library provides a client-side and a server-side implementation. The client-side implementation is used to connect to the server and send and receive messages. The server-side implementation is used to handle incoming connections and send messages to the clients.</p> <p>Here's an example of how to use Socket.IO in Python:</p> <pre><code>import socketio\n\nsio = socketio.Client()\n\n@sio.event\ndef connect():\n    print('connection established')\n\n\n@sio.event\ndef message(data):\n    print('message received with ', data)\n    sio.emit('response', {'response': 'my response'})\n\n\n@sio.event\ndef disconnect():\n    print('disconnected from server')\n\n\nsio.connect('http://localhost:5000')\n</code></pre> <ol> <li>First, we import the <code>socketio</code> library.</li> <li>We create a <code>socketio.Client</code> object.</li> <li>We define three event handlers: <code>connect</code>, <code>message</code>, and <code>disconnect</code>.</li> <li>In the <code>connect</code> event handler, we print a message to indicate that the connection has been established.</li> <li>In the <code>message</code> event handler, we print the received message and send a response using the <code>emit</code> method.</li> <li>In the <code>disconnect</code> event handler, we print a message to indicate that the connection has been lost.</li> <li>We connect to the server using the <code>connect</code> method and pass the URL of the server as an argument.</li> </ol> <p>Note that the <code>emit</code> method is used to send a message to the server. The first argument is the event name, and the second argument is the data to be sent. In this example, we send a response to the client with the <code>response</code> event name.</p> <p>The server-side implementation is a bit more complex, but it can be done using the <code>flask-socketio</code> library. Here's an example of how to use Socket.IO in Python with Flask:</p> <pre><code>from flask import Flask, render_template\nfrom flask_socketio import SocketIO, emit\n\napp = Flask(__name__)\napp.config['SECRET_KEY'] ='secret!'\nsocketio = SocketIO(app)\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n@socketio.on('connect')\ndef connect():\n    print('connected')\n\n@socketio.on('message')\ndef message(data):\n    print('message received with ', data)\n    emit('response', {'response': 'my response'})\n\n@socketio.on('disconnect')\ndef disconnect():\n    print('disconnected')\n\n\nif __name__ == '__main__':\n    socketio.run(app, debug=True)\n</code></pre> <ol> <li>First, we import the <code>Flask</code>, <code>render_template</code>, <code>SocketIO</code>, and <code>emit</code> functions from the <code>flask</code>, <code>flask_socketio</code>, and <code>socketio</code> libraries, respectively.</li> <li>We create a <code>Flask</code> app object and set the <code>SECRET_KEY</code> configuration variable.</li> <li>We create a <code>SocketIO</code> object and pass the <code>app</code> object as an argument.</li> <li>We define three event handlers: <code>connect</code>, <code>message</code>, and <code>disconnect</code>.</li> <li>In the <code>connect</code> event handler, we print a message to indicate that a client has connected.</li> <li>In the <code>message</code> event handler, we print the received message and send a response using the <code>emit</code> function.</li> <li>In the <code>disconnect</code> event handler, we print a message to indicate that a client has disconnected.</li> <li>We run the app using the <code>run</code> method and pass the <code>app</code> object as an argument.</li> </ol> <p>In this example, we use the <code>emit</code> function to send a message to the client with the <code>response</code> event name. The first argument is the event name, and the second argument is the data to be sent. In this example, we send a response to the client with the <code>response</code> event name.</p> <p>Note that the <code>emit</code> function is used to send a message to the client. The first argument is the event name, and the second argument is the data to be sent. In this example, we send a response to the client with the <code>response</code> event name.</p> <p>The client-side implementation is a bit more complex, but it can be done using the <code>socket.io-client</code> library. Here's an example of how to use Socket.IO in Python with a JavaScript client:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;title&gt;Socket.IO Example&lt;/title&gt;\n  &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;Socket.IO Example&lt;/h1&gt;\n  &lt;p id=\"message\"&gt;&lt;/p&gt;\n  &lt;script&gt;\n    const socket = io();\n\n    socket.on('connect', () =&gt; {\n      console.log('connected');\n      socket.emit('message', 'Hello, server!');\n    });\n\n    socket.on('response', (data) =&gt; {\n      console.log('response received with ', data);\n      document.getElementById('message').innerHTML = data.response;\n    });\n\n    socket.on('disconnect', () =&gt; {\n      console.log('disconnected');\n    });\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li>First, we import the <code>socket.io-client</code> library.</li> <li>We create a <code>socket</code> object and pass the URL of the server as an argument.</li> <li>We define three event handlers: <code>connect</code>, <code>response</code>, and <code>disconnect</code>.</li> <li>In the <code>connect</code> event handler, we print a message to indicate that the connection has been established.</li> <li>In the <code>response</code> event handler, we print the received message and update the <code>message</code> element with the response.</li> <li>In the <code>disconnect</code> event handler, we print a message to indicate that the connection has been lost.</li> </ol> <p>Note that the <code>emit</code> method is used to send a message to the server. The first argument is the event name, and the second argument is the data to be sent. In this example, we send a message to the server with the <code>message</code> event name.</p> <p>The server-side implementation is a bit more complex, but it can be done using the <code>socket.io</code> library. Here's an example of how to use Socket.IO in Python with a JavaScript server:</p> <pre><code>const express = require('express');\nconst app = express();\nconst http = require('http');\nconst server = http.createServer(app);\nconst { Server } = require('socket.io');\n\nconst io = new Server(server, {\n  cors: {\n    origin: '*',\n  },\n});\n\nio.on('connection', (socket) =&gt; {\n  console.log('a user connected');\n\n  socket.on('message', (data) =&gt; {\n    console.log('message received with ', data);\n    socket.emit('response', { response: 'my response' });\n  });\n\n  socket.on('disconnect', () =&gt; {\n    console.log('user disconnected');\n  });\n});\n\nserver.listen(3000, () =&gt; {\n  console.log('listening on *:3000');\n});\n</code></pre> <ol> <li>First, we import the <code>express</code>, <code>http</code>, and <code>socket.io</code> libraries.</li> <li>We create an <code>app</code> object and a <code>server</code> object using the <code>http</code> library.</li> <li>We create a <code>socket.io</code> object and pass the <code>server</code> object as an argument.</li> <li>We define an event handler for the <code>connection</code> event.</li> <li>In the <code>connection</code> event handler, we print a message to indicate that a client has connected.</li> <li>We define an event handler for the <code>message</code> event.</li> <li>In the <code>message</code> event handler, we print the received message and send a response using the <code>emit</code> method.</li> <li>We define an event handler for the <code>disconnect</code> event.</li> <li>In the <code>disconnect</code> event handler, we print a message to indicate that a client has disconnected.</li> <li>We start the server using the <code>listen</code> method and pass the port number as an argument.</li> <li>We print a message to indicate that the server is listening on the specified port.</li> </ol> <p>In this example, we use the <code>emit</code> method to send a message to the client with the <code>response</code> event name. The first argument is the event name, and the second argument is the data to be sent. In this example, we send a response to the client with the <code>response</code> event name.</p> <p>Note that the <code>cors</code> option is used to allow cross-origin requests. This is necessary for Socket.IO to work between the client and the server.  </p> <p>Overall, Socket.IO is a powerful tool for real-time communication between the client and the server. It provides a simple API for real-time communication and is easy to use in Python and JavaScript.</p>"},{"location":"Useful%20Blogs/blogs/","title":"Blogs","text":"<p>KAN\u8bba\u6587\u8be6\u7ec6\u6ce8\u89e3\uff1ahttps://alexzhang13.github.io/blog/2024/annotated-kan/</p>"},{"location":"Useful%20Tools/CMake/","title":"CMake","text":"<p>CMake is a cross-platform build system generator. It is used to build, test, and package software. It is widely used in the open-source community and is used in many popular projects such as OpenCV, VTK, and ITK.</p>"},{"location":"Useful%20Tools/CMake/#installing-cmake","title":"Installing CMake","text":"<p>To install CMake, you can download the installer from the official website: https://cmake.org/download/.</p>"},{"location":"Useful%20Tools/CMake/#using-cmake","title":"Using CMake","text":"<p>To use CMake, you need to create a <code>CMakeLists.txt</code> file in the root directory of your project. This file contains all the instructions for building your project.</p> <p>Here is a basic example of a <code>CMakeLists.txt</code> file:</p> <pre><code>cmake_minimum_required(VERSION 3.10)\n\nproject(MyProject)\n\nset(CMAKE_CXX_STANDARD 11)\n\nadd_executable(MyProject main.cpp)\n</code></pre> <p>In this example, we set the minimum required version of CMake to 3.10, set the project name to \"MyProject\", set the C++ standard to 11, and add an executable target called \"MyProject\" that compiles the \"main.cpp\" file.</p> <p>To build the project, you can run the following command in the terminal:</p> <pre><code>cmake .\n</code></pre> <p>This will generate the necessary build files for your project in a directory called \"build\". You can then run the build process by running:</p> <pre><code>cmake --build .\n</code></pre> <p>This will build the project and create an executable file in the \"build\" directory. You can then run the executable to run your program.</p>"},{"location":"Useful%20Tools/CMake/#resources","title":"Resources","text":"<ul> <li>CMake Homepage</li> <li>CMake \u5b98\u65b9 Tutorial</li> <li>CMake Documentation</li> <li>CMake Tutorial</li> <li>CMake Examples</li> <li>CMake Cheat Sheet</li> <li>CMake FAQ</li> <li>CMake Best Practices</li> <li>\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66 IPADS \u7ec4\u65b0\u4eba\u57f9\u8bad</li> </ul>"},{"location":"Useful%20Tools/Docker/","title":"Docker","text":""},{"location":"Useful%20Tools/Docker/#docker_1","title":"Docker\u5b66\u4e60\u8d44\u6599","text":"<p>Docker \u5b98\u65b9\u6587\u6863\u5f53\u7136\u662f\u6700\u597d\u7684\u521d\u5b66\u6559\u6750\uff0c\u4f46\u6700\u597d\u7684\u5bfc\u5e08\u4e00\u5b9a\u662f\u4f60\u81ea\u5df1\u2014\u2014\u5c1d\u8bd5\u53bb\u4f7f\u7528 Docker \u624d\u80fd\u4eab\u53d7\u5b83\u5e26\u6765\u7684\u4fbf\u5229\u3002Docker \u5728\u5de5\u4e1a\u754c\u53d1\u5c55\u8fc5\u731b\u5e76\u5df2\u7ecf\u975e\u5e38\u6210\u719f\uff0c\u4f60\u53ef\u4ee5\u4e0b\u8f7d\u5b83\u7684\u684c\u9762\u7aef\u5e76\u4f7f\u7528\u56fe\u5f62\u754c\u9762\u3002</p> <p>\u5f53\u7136\uff0c\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\uff0c\u662f\u4e00\u4e2a\u75af\u72c2\u7684\u9020\u8f6e\u5b50\u7231\u597d\u8005\uff0c\u90a3\u4e0d\u59a8\u81ea\u5df1\u4eb2\u624b\u5199\u4e00\u4e2a\u8ff7\u4f60 Docker \u6765\u52a0\u6df1\u7406\u89e3\u3002</p> <p>KodeKloud Docker for the Absolute Beginner \u5168\u9762\u7684\u4ecb\u7ecd\u4e86 Docker \u7684\u57fa\u7840\u529f\u80fd\uff0c\u5e76\u4e14\u6709\u5927\u91cf\u7684\u914d\u5957\u7ec3\u4e60\uff0c\u540c\u65f6\u63d0\u4f9b\u514d\u8d39\u7684\u4e91\u73af\u5883\u6765\u5b8c\u6210\u7ec3\u4e60\u3002\u5176\u4f59\u7684\u4e91\u76f8\u5173\u7684\u8bfe\u7a0b\u5982 Kubernetes \u9700\u8981\u4ed8\u8d39\uff0c\u4f46\u4e2a\u4eba\u5f3a\u70c8\u63a8\u8350\uff1a\u8bb2\u89e3\u975e\u5e38\u4ed4\u7ec6\uff0c\u9002\u5408\u4ece 0 \u5f00\u59cb\u7684\u65b0\u624b\uff1b\u6709\u914d\u5957\u7684 Kubernetes \u7684\u5b9e\u9a8c\u73af\u5883\uff0c\u4e0d\u7528\u88ab\u642d\u5efa\u73af\u5883\u529d\u9000\u3002</p>"},{"location":"Useful%20Tools/GDB/","title":"GNU Debuger","text":""},{"location":"Useful%20Tools/GDB/#1-introduction","title":"1. Introduction","text":"<p>GNU Debuger (GDB) is a powerful command-line debugger that is used to debug and analyze programs. It is a powerful tool for developers and system administrators to debug and optimize their code. GDB provides a powerful set of commands and features that allow developers to debug their code in a variety of ways.</p> <p>In this article, we will learn how to use GDB to debug and optimize our code. We will also learn how to use GDB commands to analyze and optimize our code.</p>"},{"location":"Useful%20Tools/GDB/#2-installing-gdb","title":"2. Installing GDB","text":"<p>GDB is included in most Linux distributions and can be installed using the package manager. For example, on Ubuntu, you can install GDB using the following command:</p> <pre><code>sudo apt-get install gdb\n</code></pre> <p>On Windows, you can download the GDB executable from the official website and add it to your PATH environment variable.</p> <p>Once GDB is installed, you can start it by typing <code>gdb</code> in the terminal. You should see the GDB prompt:</p> <pre><code>(gdb)\n</code></pre> <p>This is the GDB command prompt. You can type GDB commands and execute them to debug and optimize your code.</p>"},{"location":"Useful%20Tools/GDB/#3-debugging-a-program","title":"3. Debugging a Program","text":"<p>To debug a program using GDB, you need to first compile the program with debugging symbols. You can do this by adding the <code>-g</code> flag to the compiler command. For example, if you are using the <code>g++</code> compiler, you can compile your program with the following command:</p> <pre><code>g++ -g myprogram.cpp -o myprogram\n</code></pre> <p>Once the program is compiled, you can run it using GDB by typing the following command:</p> <pre><code>gdb myprogram\n</code></pre> <p>This will start GDB and load the program. You can then set breakpoints in your code using the <code>break</code> command. For example, to set a breakpoint at line 10 of your program, you can type:</p> <pre><code>break 10\n</code></pre> <p>You can then run the program using the <code>run</code> command:</p> <pre><code>run\n</code></pre> <p>This will start the program and stop at the breakpoint. You can then use GDB commands to analyze the program state and debug the program.</p> <p>For example, you can use the <code>print</code> command to print the value of a variable:</p> <pre><code>print myVariable\n</code></pre> <p>You can also use the <code>step</code> command to execute the next line of code:</p> <pre><code>step\n</code></pre> <p>This will execute the next line of code and stop at the next breakpoint. You can use the <code>continue</code> command to continue running the program until the next breakpoint:</p> <pre><code>continue\n</code></pre> <p>You can use the <code>backtrace</code> command to view the call stack:</p> <pre><code>backtrace\n</code></pre> <p>This will show you the current function call stack. You can use the <code>info</code> command to view information about variables, threads, and breakpoints.</p> <p>Once you are done debugging, you can exit GDB using the <code>quit</code> command.</p>"},{"location":"Useful%20Tools/GDB/#4-optimizing-a-program","title":"4. Optimizing a Program","text":"<p>GDB can also be used to optimize a program. You can use GDB commands to analyze the program and identify areas that can be optimized. For example, you can use the <code>time</code> command to measure the execution time of a function:</p> <pre><code>time myFunction\n</code></pre> <p>You can then use the <code>profile</code> command to identify areas that are taking the most time:</p> <pre><code>profile\n</code></pre> <p>This will show you the top 10 functions that are taking the most time to execute. You can then use GDB commands to optimize these functions.</p> <p>For example, you can use the <code>set</code> command to change the value of a variable:</p> <pre><code>set myVariable = 10\n</code></pre> <p>This will set the value of <code>myVariable</code> to 10. You can also use the <code>watch</code> command to monitor a variable and automatically break when it changes:</p> <pre><code>watch myVariable\n</code></pre> <p>This will break the program when <code>myVariable</code> changes. You can then use the <code>finish</code> command to execute the rest of the function:</p> <pre><code>finish\n</code></pre> <p>This will execute the rest of the function and continue running the program. You can use the <code>return</code> command to return from a function:</p> <pre><code>return\n</code></pre> <p>This will return from the current function and continue running the program.</p>"},{"location":"Useful%20Tools/GDB/#reference","title":"Reference","text":"<ul> <li>\u4e00\u6587\u5feb\u901f\u4e0a\u624bGDB</li> </ul>"},{"location":"Useful%20Tools/MIT-Missing-Semester/","title":"MIT: The Missing Semester of Your CS Education","text":""},{"location":"Useful%20Tools/MIT-Missing-Semester/#_1","title":"\u8bfe\u7a0b\u7b80\u4ecb","text":"<ul> <li>\u5148\u4fee\u8981\u6c42\uff1a\u65e0</li> <li>\u7f16\u7a0b\u8bed\u8a00\uff1ashell</li> <li>\u8bfe\u7a0b\u96be\u5ea6\uff1a\ud83c\udf1f\ud83c\udf1f</li> <li>\u9884\u8ba1\u5b66\u65f6\uff1a10 \u5c0f\u65f6</li> </ul> <p>\u6b63\u5982\u8bfe\u7a0b\u540d\u5b57\u6240\u8a00\uff1a\u201c\u8ba1\u7b97\u673a\u6559\u5b66\u4e2d\u6d88\u5931\u7684\u4e00\u4e2a\u5b66\u671f\u201d\uff0c\u8fd9\u95e8\u8bfe\u5c06\u4f1a\u6559\u4f1a\u4f60\u8bb8\u591a\u5927\u5b66\u7684\u8bfe\u5802\u4e0a\u4e0d\u4f1a\u6d89\u53ca\u4f46\u5374\u5bf9\u6bcf\u4e2a CSer \u65e0\u6bd4\u91cd\u8981\u7684\u5de5\u5177\u6216\u8005\u77e5\u8bc6\u70b9\u3002\u4f8b\u5982 Shell \u7f16\u7a0b\u3001\u547d\u4ee4\u884c\u914d\u7f6e\u3001Git\u3001Vim\u3001<code>tmux</code>\u3001<code>ssh</code> \u7b49\u7b49\u3002\u5982\u679c\u4f60\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u5c0f\u767d\uff0c\u90a3\u4e48\u6211\u975e\u5e38\u5efa\u8bae\u4f60\u5b66\u4e60\u4e00\u4e0b\u8fd9\u95e8\u8bfe\uff0c\u56e0\u4e3a\u5b83\u57fa\u672c\u6d89\u53ca\u4e86\u672c\u4e66\u5fc5\u5b66\u5de5\u5177\u4e2d\u7684\u7edd\u5927\u90e8\u5206\u5185\u5bb9\u3002</p> <p>\u9664\u4e86 MIT \u5b98\u65b9\u7684\u5b66\u4e60\u8d44\u6599\u5916\uff0c\u5317\u4eac\u5927\u5b66\u56fe\u7075\u73ed\u5f00\u8bbe\u7684\u524d\u6cbf\u8ba1\u7b97\u5b9e\u8df5\u4e2d\u4e5f\u5f00\u8bbe\u4e86\u76f8\u5173\u8bfe\u7a0b\uff0c\u8d44\u6599\u4f4d\u4e8e\u8fd9\u4e2a\u7f51\u7ad9\u4e0b\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002</p>"},{"location":"Useful%20Tools/MIT-Missing-Semester/#_2","title":"\u8bfe\u7a0b\u8d44\u6e90","text":"<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9\uff1ahttps://missing.csail.mit.edu/2020/</li> <li>\u8bfe\u7a0b\u4e2d\u6587\u7f51\u7ad9: https://missing-semester-cn.github.io/</li> <li>\u8bfe\u7a0b\u89c6\u9891\uff1ahttps://www.youtube.com/playlist?list=PLyzOVJj3bHQuloKGG59rS43e29ro7I57J</li> <li>\u8bfe\u7a0b\u4e2d\u6587\u5b57\u5e55\u89c6\u9891\uff1a<ul> <li>Missing_Semi_\u4e2d\u8bd1\u7ec4\uff08\u672a\u5b8c\u7ed3\uff09\uff1ahttps://space.bilibili.com/1010983811?spm_id_from=333.337.search-card.all.click</li> <li>\u5218\u9ed1\u9ed1a\uff08\u5df2\u5b8c\u7ed3\uff09\uff1ahttps://space.bilibili.com/518734451?spm_id_from=333.337.search-card.all.click</li> </ul> </li> <li>\u8bfe\u7a0b\u4f5c\u4e1a\uff1a\u4e00\u4e9b\u968f\u5802\u5c0f\u7ec3\u4e60\uff0c\u5177\u4f53\u89c1\u8bfe\u7a0b\u7f51\u7ad9\u3002</li> </ul>"},{"location":"Useful%20Tools/Makefile/","title":"GNU Make","text":""},{"location":"Useful%20Tools/Makefile/#1-introduction","title":"1. Introduction","text":"<p>GNU Make is a tool for automating the build process of software projects. It is a command-line tool that can be used to build, test, and package software projects. GNU Make is a cross-platform tool that can be used on Windows, Linux, and macOS.</p>"},{"location":"Useful%20Tools/Makefile/#2-installation","title":"2. Installation","text":"<p>GNU Make can be installed on Windows, Linux, and macOS using the following steps:</p> <ol> <li> <p>Download the latest release of GNU Make from the official website: https://www.github.com/amake/gnumake</p> </li> <li> <p>Extract the downloaded file and move the <code>gnumake</code> executable to a directory that is in the system PATH.</p> </li> <li> <p>Verify that GNU Make is installed by running the <code>gnumake</code> command in the terminal or command prompt.</p> </li> </ol>"},{"location":"Useful%20Tools/Makefile/#3-usage","title":"3. Usage","text":"<p>GNU Make can be used to build, test, and package software projects by running the <code>gnumake</code> command in the terminal or command prompt. The <code>gnumake</code> command takes a command as an argument, which can be one of the following:</p> <ul> <li><code>build</code>: builds the software project.</li> <li><code>test</code>: runs the test suite of the software project.</li> <li><code>package</code>: packages the software project for distribution.</li> </ul> <p>For example, to build a software project, run the following command:</p> <pre><code>gnumake build\n</code></pre> <p>To run the test suite of a software project, run the following command:</p> <pre><code>gnumake test\n</code></pre> <p>To package a software project for distribution, run the following command:</p> <pre><code>gnumake package\n</code></pre>"},{"location":"Useful%20Tools/Makefile/#4-configuration","title":"4. Configuration","text":"<p>GNU Make can be configured by creating a <code>Makefile.yaml</code> file in the root directory of the software project. The <code>Makefile.yaml</code> file contains the configuration for GNU Make, such as the build commands, test commands, and package commands.</p> <p>Here is an example <code>Makefile.yaml</code> file:</p> <pre><code>build:\n  command: \"python setup.py build\"\n\ntest:\n  command: \"python setup.py test\"\n\npackage:\n  command: \"python setup.py sdist bdist_wheel\"\n</code></pre> <p>In this example, the <code>build</code> command is set to <code>python setup.py build</code>, which builds the software project using the <code>setup.py</code> file. The <code>test</code> command is set to <code>python setup.py test</code>, which rNUs the test suite of the software project using the <code>setup.py</code> file. The <code>package</code> command is set to <code>python setup.py sdist bdist_wheel</code>, which packages the software project for distribution using the <code>setup.py</code> file.</p>"},{"location":"Useful%20Tools/Makefile/#5-conclusion","title":"5. Conclusion","text":"<p>GNU Make is a powerful tool for automating the build process of software projects. It can be used to build, test, and package software projects on Windows, Linux, and macOS. The <code>Makefile.yaml</code> file can be used to configure GNU Make to build, test, and package software projects according to the needs of the project.</p>"},{"location":"Useful%20Tools/Makefile/#6resources","title":"6.Resources","text":"<ul> <li> <p>How to Write a Makefile</p> </li> <li> <p>GNU Make Manual</p> </li> </ul>"},{"location":"Useful%20Tools/Regex/","title":"Regex","text":""},{"location":"Useful%20Tools/Regex/#regular-expressions","title":"Regular Expressions","text":"<p>Regular expressions are a sequence of characters that define a search pattern. They are used to match, locate, and manipulate text. In Python, regular expressions are implemented using the <code>re</code> module.</p> <p>Here are some examples of regular expressions:</p> <ul> <li><code>r\"hello\\s+world\"</code>: Matches the string \"hello world\" with any number of spaces between \"hello\" and \"world\".</li> <li><code>r\"\\d+\"</code>: Matches one or more digits.</li> <li><code>r\"\\w+\"</code>: Matches one or more word characters (letters, digits, and underscores).</li> <li><code>r\"[\\w\\s]+\"</code>: Matches one or more word characters or spaces.</li> <li><code>r\"[\\w\\s]+@[\\w\\s]+\\.[\\w]{2,3}\"</code>: Matches an email address with a username, domain name, and top-level domain.</li> </ul>"},{"location":"Useful%20Tools/Regex/#using-regular-expressions-in-python","title":"Using Regular Expressions in Python","text":"<ol> <li>Import the <code>re</code> module:</li> </ol> <pre><code>import re\n</code></pre> <ol> <li>Use the <code>re.search()</code> function to search for a pattern in a string:</li> </ol> <pre><code>string = \"The quick brown fox jumps over the lazy dog\"\npattern = r\"fox\"\nmatch = re.search(pattern, string)\nif match:\n    print(\"Match found:\", match.group())\nelse:\n    print(\"Match not found\")\n</code></pre> <ol> <li>Use the <code>re.findall()</code> function to find all occurrences of a pattern in a string:</li> </ol> <pre><code>string = \"The quick brown fox jumps over the lazy dog\"\npattern = r\"\\b\\w{3}\\b\"\nmatches = re.findall(pattern, string)\nprint(\"Matches:\", matches)\n</code></pre> <ol> <li>Use the <code>re.sub()</code> function to replace all occurrences of a pattern in a string with a new string:</li> </ol> <pre><code>string = \"The quick brown fox jumps over the lazy dog\"\npattern = r\"fox\"\nnew_string = re.sub(pattern, \"cat\", string)\nprint(\"New string:\", new_string)\n</code></pre>"},{"location":"Useful%20Tools/Regex/#resources","title":"Resources","text":"<ul> <li>Email Regex</li> <li>Regex 101</li> <li>Python Regular Expressions</li> <li>Regular Expression HOWTO</li> <li>Regular Expressions in Python</li> </ul>"},{"location":"Web%20Framework/Django/","title":"Django","text":"<p>Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design. Built by experienced developers, it takes care of much of the hassle of web development, such as database abstraction, URL routing, and templating. Django's documentation is excellent and provides a comprehensive guide to its features and functionality.</p> <p>Django is known for its ease of use, high-level abstractions, and reusability. It's also fast, scalable, and secure. With Django, you can quickly build complex web applications with reusable, well-documented code.</p> <p>Django is open-source, which means that the community is constantly adding new features and functionality. This makes it a popular choice for building large-scale web applications.</p> <p>Django is known for its ability to handle complex database relationships and queries, which makes it a popular choice for building complex web applications. It also has a strong community of developers who contribute to its development and documentation.</p> <p>Django is also known for its support for internationalization and localization, which makes it a popular choice for building multilingual web applications. It also has a large and active developer community, which makes it a popular choice for building enterprise-level web applications.</p>"},{"location":"Web%20Framework/Flask/","title":"Flask","text":"<p>Flask is a web framework written in Python. It is lightweight, easy to use, and provides a lot of features out of the box. It is also easy to learn and has a large community of developers who contribute to its development.</p>"},{"location":"Web%20Framework/MkDocs/","title":"MkDocs","text":"<p>MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.</p>"},{"location":"Web%20Framework/MkDocs/#getting-started","title":"Getting Started","text":"<p>To get started with MkDocs, follow these steps:</p> <ol> <li>Install MkDocs:</li> </ol> <pre><code>pip install mkdocs\n</code></pre> <ol> <li>Create a new directory for your project:</li> </ol> <pre><code>mkdir myproject\n</code></pre> <ol> <li>Initialize a new MkDocs project:</li> </ol> <pre><code>cd myproject\nmkdocs new .\n</code></pre> <ol> <li>Start the development server:</li> </ol> <pre><code>mkdocs serve\n</code></pre> <ol> <li>Open your browser and go to <code>http://127.0.0.1:8000/</code> to view your new documentation site.</li> </ol>"},{"location":"Web%20Framework/MkDocs/#writing-your-first-page","title":"Writing Your First Page","text":"<p>To create a new page, create a new file in the <code>docs</code> directory with a <code>.md</code> extension. For example, create a new file called <code>about.md</code> in the <code>docs</code> directory:</p> <p>``` docs \u251c\u2500\u2500 about.md</p>"},{"location":"Web%20Framework/React/","title":"React","text":"<p>React is a JavaScript library for building user interfaces. It is used for building complex and interactive web applications. React is a declarative, component-based library that simplifies the process of building user interfaces. It is easy to learn and use, and it has a large and active community of developers.</p>"},{"location":"Web%20Framework/React/#getting-started","title":"Getting Started","text":"<p>To get started with React, you can follow the steps below:</p> <ol> <li>Install Node.js and npm on your system.</li> <li>Create a new React project using the create-react-app command.</li> <li>Start the development server using the npm start command.</li> <li>Open the project in your preferred code editor.</li> </ol>"},{"location":"Web%20Framework/React/#react-components","title":"React Components","text":"<p>React components are the building blocks of React applications. They are small, reusable pieces of code that can be used to create complex user interfaces. React components can be created using JavaScript or JSX. JSX is a syntax extension of JavaScript that allows you to write HTML-like code within JavaScript.</p>"},{"location":"Web%20Framework/React/#react-props","title":"React Props","text":"<p>React props are the input data that are passed to a component. They are used to customize the behavior and appearance of a component. Props can be passed to a component using attributes or properties.</p>"},{"location":"Web%20Framework/React/#react-state","title":"React State","text":"<p>React state is the data that is managed by a component. It is used to keep track of the user interface state and is updated by the component. State can be updated using the setState method.</p>"},{"location":"Web%20Framework/React/#react-life-cycle-methods","title":"React Life Cycle Methods","text":"<p>React life cycle methods are functions that are called at different stages of the component lifecycle. They are used to perform certain actions when a component is mounted, updated, or unmounted.</p>"},{"location":"Web%20Framework/React/#react-router","title":"React Router","text":"<p>React Router is a library for handling client-side routing in React applications. It allows you to create dynamic and responsive web applications with ease. It provides a simple and declarative API for handling navigation in your application.</p>"},{"location":"Web%20Framework/React/#react-hooks","title":"React Hooks","text":"<p>React hooks are a new feature in React that allow you to use state and other React features without writing a class. They are a way to use state and other React features without writing a class. They are a way to use state and other React features without writing a class.</p>"},{"location":"Web%20Framework/Streamlit/","title":"Streamlit","text":"<p>Streamlit is an open-source Python library that makes it easy to create and share beautiful, custom web apps for machine learning and data science. In this section, we will learn how to use Streamlit to create a simple web app that displays a list of movies and their ratings.</p>"},{"location":"Web%20Framework/Streamlit/#prerequisites","title":"Prerequisites","text":"<ol> <li>Python 3.6 or later</li> <li>Streamlit library</li> </ol>"},{"location":"Web%20Framework/Streamlit/#step-1-install-streamlit","title":"Step 1: Install Streamlit","text":"<p>To install Streamlit, run the following command in your terminal:</p> <pre><code>pip install streamlit\n</code></pre>"},{"location":"Web%20Framework/Streamlit/#step-2-create-a-new-streamlit-app","title":"Step 2: Create a new Streamlit app","text":"<p>To create a new Streamlit app, run the following command in your terminal:</p> <pre><code>streamlit hello\n</code></pre> <p>This will create a new directory called <code>my_first_app</code> with a sample app. Open the <code>app.py</code> file in your text editor to see the code.</p>"},{"location":"Web%20Framework/Streamlit/#step-3-add-a-list-of-movies-and-their-ratings","title":"Step 3: Add a list of movies and their ratings","text":"<p>To add a list of movies and their ratings, replace the code in <code>app.py</code> with the following:</p> <pre><code>import streamlit as st\n\n# Create a list of movies and their ratings\n</code></pre>"},{"location":"Web%20Framework/Streamlit/#pydeck","title":"Pydeck","text":"<p>Pydeck is a Python library for creating data visualizations using deck.gl, an open-source WebGL-based visualization framework. We can use it to create a map of the movies and their ratings.</p> <ul> <li>https://deckgl.readthedocs.io/</li> <li>heatmap</li> </ul>"},{"location":"Web%20Framework/Vue/","title":"Vue.js","text":"<p>Vue.js is a progressive framework for building user interfaces. It is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or frameworks.</p>"},{"location":"Web%20Framework/Vue/#getting-started","title":"Getting Started","text":"<p>To get started with Vue.js, you can follow the official guide on their website:</p> <ul> <li>Getting Started</li> <li>Vue CLI</li> <li>Vue Router</li> <li>Vuex</li> <li>Vue Loader</li> </ul>"},{"location":"Web%20Framework/Vue/#examples","title":"Examples","text":"<p>Here are some examples of Vue.js applications:</p> <ul> <li>TodoMVC</li> <li>Vue.js Examples</li> <li>Vue.js News</li> <li>Vue.js Jobs</li> </ul>"}]}